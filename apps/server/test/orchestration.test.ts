import { OrchestrationRuntime } from '../src/orchestration/runtime';
import { beforeEach, describe, expect, it, vi } from 'vitest';

describe('OrchestrationRuntime', () => {
  let runtime: OrchestrationRuntime;

  beforeEach(() => {
    runtime = new OrchestrationRuntime();
    // Initialize session state for predictability
    (globalThis as any).__SESSION_STATE__ = {};
  });

  it('should pass the generated prd_document to the designDatabaseSchema tool', async () => {
    // Spy on the private executeStep method to inspect its arguments
    const executeStepSpy = vi.spyOn(runtime as any, 'executeStep');

    // Run the full pipeline
    await runtime.runFromPrompt('Create a new web application for project management');

    // Find the call to the 'design_database' step
    const designDatabaseCall = executeStepSpy.mock.calls.find(
      (call) => call[0] === 'design_database'
    );

    // Get the prd_document that was generated by the 'create_prd' step
    const generatedPrd = (globalThis as any).__SESSION_STATE__.prd_document;

    // Assertions
    expect(generatedPrd).toBeDefined();
    expect(generatedPrd).not.toEqual({});
    expect(designDatabaseCall).toBeDefined();
    expect(designDatabaseCall?.[3].requirements).toBeDefined();
    // Verify that the exact PRD generated in the session state is passed to the tool
    expect(designDatabaseCall?.[3].requirements).toEqual(generatedPrd);
  });
});
